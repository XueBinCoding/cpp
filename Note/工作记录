1.对于mbedtls的使用文件的标定
	crypto.hpp的文件中
	#include <mbedtls/md5.h>
2.对mebedtls 的替换
	已经替换（后期调的时候看看有没有遗漏的部分）
3.LIST (FILTER SOURCEFILES EXCLUDE REGEX) 是什么玩意(reference site https://cmake.org/cmake/help/v3.6/command/list.html)
	FILTER will include or remove items from the list that match the mode’s pattern(determined by exclude or include).
	In REGEX mode, items will be matched against the given regular expression.
4. how to add precompile command in cmakelist
	add_compile_options
	set(CMAKE_CXX_FLAGS "")
	
5.编译openssl 静态库
	编译命令：./config -fPIC no-shared
	裁剪命令：no-asm no-async shared no-md2 no-md4 no-mdc2 no-poly1305 no-blake2 no-siphash no-sm3 no-rc2 no-rc4 no-rc5 no-idea no-aria no-bf no-cast no-camellia no-seed no-sm4 no-chacha no-ec no-dsa no-sm2 no-dso no-engine no-err no-comp no-ocsp no-cms no-ts no-srp no-cmac no-ct 
	
6.openssl 的链接
set(OPENSSL_ROOT_DIR "../../libs/linux/x64")
find_package(OpenSSL REQUIRED)
target_link_libraries(SimpleWSSClient INTERFACE ${OPENSSL_LIBRARIES})
target_include_directories(SimpleWSSClient INTERFACE ${OPENSSL_INCLUDE_DIR})

7cmake 的一些命令
	SimpleWSSClient
8 aikit sleep 的重复定义
9 cmake的接口库，接口库会不会优化


		auto clientThread = [=]{
			if (port == DEFAULT_WSS_PORT) 
			{
				WssClient client(ip, serverHost, serverUrl,false);
				client.start();
			}
			else
			{
				WsClient client(ip, serverHost, serverUrl,false);
				client.start();
			}
		};

		std::thread clientWS(clientThread);
		clientWS.detach();
		
		
10 可能遇到的问题
	1.aikit 的前因后果

11.搞清楚DNS 和http DNS的获取过程
12.实现websocket 
13 sslv3 和tlsv1

/root/xbfeng/tools/cmakedir/usr/local/bin/cmake .. -DCMAKE_BUILD_TYPE=Release
notify all 的方法

# 使用gc-section优化
set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -ffunction-sections -fdata-sections")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -ffunction-sections -fdata-sections")
set(CMAKE_EXE_LINKER_FLAGS    "${CMAKE_EXE_LINKER_FLAGS}    -Wl,--gc-sections")
set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -Wl,--gc-sections")
set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Wl,--gc-sections")


本地log
1.可以用户指定log路径
2.多平台通用
3.本地log的大小限制
4.只有一个线程写log
5.有个开关控制log 是否打印

20200511
测试多线程的log使用
使用循环队列来控制队列中保存信息的大小
在C++ stl queue的基础上封装queue来达到循环队列的效果(对queue的大小进行限制)


20200512
1.整理文件创建的函数。入库


20200514
1.音频输入，多段输入
2.资源路径需要传输
3.需要的参数，比如门限设置

deepin 版本环境搭建
1.安装git
2.gdb
3.cmake


20200515
1.将唤醒词作为参数传入
2.设置threshold
3.资源包路径可传输
4.demo直接跑
5.错误处理


本周任务状态：
	1.ivw 离线版本完成
	2.log 代码部分完成，业务部分待添加


20200518
1.完成在线log,在线log的结构化部分待定，时间戳的功能需要增加
2.各个接口扽参数返回部分

未完成部分：
	1.各接口的错误码
	2.接口是直接抛数据还是对server 的数据进行二次处理
	3.server url 用户输入还是程序写死
	4.写文档的时候要不要把参数哦格式透明

mount -t vboxsf shared /mnt/share/


1.添log
2.离线部分异常时资源回收
3.mtts和xtts的进度回调返回
4.离线代码优化

ret = hEsrInst->wEsrSetParameter("wesr_param_character_encoding", "utf-8");
        if(ret !=ESR_SUCCESS)
        {
            return ret;
        }


# 第一种
gdb 可执行文件名 core文件
bt

# 第二种
gdb -c core_file
symbol-file 应用的执行程序（绝对路径）
sharedlibrary
bt

git 查看某个文件的变动
git log --pretty=oneline 文件名

git fetch --all
git reset --hard origin/master
git fetch

1.linux吗代码编译时混淆
2.memcpy 函数的错误捕获
3.对于effective c++ 的整理



1. 参数对比总结
定制版本参数:https://git.iflytek.com/AIaaS/api-doc/blob/master/webgate-ws-doc/iat.md
云平台版本参数:https://aidocs.xfyun.cn/docs/tts/websocket%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3.html
iat : 参数相同
tts: 定制比新接口少了ttp ，rhy（仅xtts引擎支持），
	sfl（取值为0，1.需要配合aue=lame使用，即aule =lame 时sfl =1，定制版本中直接使用aue=lame表示为MP3）
	auf 作为必传参数没传也可以，文档上也说明有默认值。
	
igr: 定制比新接口少了ent,request_id,data 部分多了status
ivw(在线)：参数一致
ise: 暂未对比 
	文档中有部分说明为必传参数的，代码中未传（subsvc，）
	有部分参数表示含义相同（language与ent,且均为必传）

目前各部分业务使用的参数均为定制url中参数的子集（即必要参数都有，部分非必要参数未传）



1.
xtts ivTTS_SetParam_Emb(mXttsHandle, ivTTS_PARAM_SYNTH_MODE, ivTTS_SYNTH_MODE_SYNCH_CB)有时候会崩溃
2.
xtts 的返回状态


esr 的动态库改变+libs
切换wEsrInitialize_去掉横
编译的警告
ivw 的session end


url
3436 1362 3514 3425 1386 1381 1435 3375 1565 1339 3450 1372
ip
1137 1208 1235 1150 1182 1211 1291 1172 1233 1208 1204 1228

todolist
1.nameserver 整合成markdown
2.nameserver 的切换机制
3.thread lock 的问题
4.写死参数的修改


参数修改：

1.加istcd 的参数
2.ise返回结果data为空时的处理

 FEFF  EF BB BF 
 
 log 开关，与存储地址
 iat 的传入参数状态不会为2


42.62.116.19
42.62.42.19

#include "net/nameserver/IPManager.h"
#include "net/uri/URI.h"
URI uri(mServerURL);
		IPManager* ipIns = IPManager::getInstance();
		if(!ipIns->isEmpty())
		{
			mServerURL =uri.getScheme()+ "://" + ipIns->getAviliableIP() + uri.getPath() ;
		}
		



写数据的时候如果写入长度为0，没有报错
total =[](int x,int y)->int(return x+y)


1.std::result_of使用
	std::result_of<func(char,int&)>::type Mytype;
2.make_shared的使用
3.std::bind()
4.emplace
5.function 函数
6.C++ 的template


打印所有堆栈信息thread apply all bt

java.lang.Throwable: jni-crash
*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
Build fingerprint: 'HUAWEI/LIO-AN00/HWLIO:10/HUAWEILIO-AN00/10.1.0.152C00:user/release-keys'
Revision: '0'
Author: collect by 'libunwind'
ABI: 'arm64-v8a'
pid: 14600, tid: 14952, name: Thread-18  >>> com.sankuai.meituan.merchant <<<
signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x10

backtrace:
    r0  00000000  r1  2bd110b7  r2  84571808  r3  00000000
    r4  b52699f8  r5  00000007  r6  b5269b28  r7  b5269a60
    r8  13804240  r9  f1af317c  r10 ba868200  r11 000010e9
    ip  b5269b28  sp  b52699f8  lr  00000007  pc  edddc560

    #00 pc 00216560  /apex/com.android.runtime/lib/libart.so (_ZN3art11interpreter6DoCallILb0ELb0EEEbPNS_9ArtMethodEPNS_6ThreadERNS_11ShadowFrameEPKNS_11InstructionEtPNS_6JValueE+219)
    #01 pc 00443d5c  /apex/com.android.runtime/lib/libart.so (MterpInvokeVirtualQuick+547)
    #02 pc 000df598  /apex/com.android.runtime/lib/libart.so
at com.iflytek.cloud.thirdparty.ag.a(unavailable:-1)
  at com.iflytek.cloud.thirdparty.ag.b(unavailable:-1)
  at com.iflytek.cloud.thirdparty.ag.run(unavailable:-1)


接下来一个月的计划细分


aikit 代码代码的框架梳理

1.写测试脚本
2.错误码的统一
3.输入参数的整理
4.把string to json/json to string 写一下

token :mBKnzxzJW5PwxZBz9w_q
AIKITCSYY


问题1。在ivw 的时候会死锁

1.	接口文档需注明哪些参数为必填参数、哪些为非必填参数，语音合成未列出发音人列表，
2.	授权信息不正确返回401，应进行修改
3.	语音听写接口文档未对vad_enable参数进行说明
4.	语音听写后端点设置无效
5.	合成文本过长（2000至）会出现报错10202情况
6.	评测的结果中建议把base64解码
7.	评测会出现崩溃现象



房贷材料：
	1.身份证与复印件2
	2.收入证明原件与复印件
	3.首付收据与pos单
	4.购房合同原件与复印件
	5.征信报告


aikit 待办：
	1.错误码的问题
	2.内存泄漏
	

文档和实际操作不一样的地方：
1.AIPass文档上描述流式场景下多数据传输的后续数据包中的header 字段可以不携带，实际使用过程中后续数据包需要传输header字段（且需要带上appid与status），不带会报10008
2.流式结构使用编码传输时frame_size为必传，不传会报10043,同时该值的正确与否不影响听写结果。


多线程的消息队列

1.设置framesize
2.部分音频无法读取
3.windows speex 库的读取


 [truncated]\t\t\t"text" : "5bqK5YmN5piO5pyI5YWJ77yM55aR5piv5Zyw5LiK6Zyc77yM5Li+5aS05pyb5piO5pyI77yM5L2g5aW95ZWK5bqK5YmN5piO5pyI5YWJ77yM55aR5piv5Zyw5LiK6Zyc77yM5Li+5aS05pyb5piO5pyI77yM5L2g5aW95ZWK5bqK5YmN5piO5pyI5YWJ77yM55aR5piv5Zyw5LiK6Z
 
 
 1.多线程写log 如何保证不乱序
 2.leetcode题
 3.编解码的代码
 
 
 
 
 现有的解决方案有三种
 1：在msc内部集成编解码，将amr音频文件解码为pcm，再使用pcm流实现听写业务。
 2：需要分别在msc和服务端构建amr 传输和接收通道。并在服务端集成解码部分代码
 3. 直接在安卓端对amr 的文件进行解码，然后对传输的参数进行一下转换，将amr的音频转为现在支持的音频格式
 
 
 1.看博客，了解语音编解码的内容
 2.测试tts的合成是否能够正常使用
 3.集成speex编解码的内容
 
 
 ivEsMemCopy->FixVADProcessOneFrameData->iFlyFixFrontFetchData
 ivEsMemCopy ->iFlyFixFrontCreate
